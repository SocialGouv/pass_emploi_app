name: PR Continuous Integration - Mobile App

on:
  push:
    branches: [develop]
  pull_request:
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Environment Variables
        uses: ./.github/actions/setvars
        with:
          varFilePath: ./.github/variables/myvars.env

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Version
        run: flutter --version

  pre-build:
    runs-on: ubuntu-latest
    needs: version
    name: pre-build
    steps:
      - name: Get current timestamp
        id: getCurrentTimestamp
        run: echo "::set-output name=date::$(date +%s)"
    outputs:
      date: ${{ steps.getCurrentTimestamp.outputs.date }}

  build-android-cej-staging:
    runs-on: ubuntu-latest
    needs: pre-build
    steps:
      - uses: actions/checkout@v3

      - name: Set Environment Variables
        uses: ./.github/actions/setvars
        with:
          varFilePath: ./.github/variables/myvars.env

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Write Google configuration for Android
        shell: bash
        run: |
          echo "$STAGING_GOOGLE_SERVICE_B64" | base64 --decode > android/app/google-services.json
        env:
          STAGING_GOOGLE_SERVICE_B64: ${{ secrets.STAGING_GOOGLE_SERVICE_B64 }}

      - name: Write key properties
        shell: bash
        run: |
          echo "$STAGING_KEY_PROPERTIES_B64" | base64 --decode > android/key.properties
        env:
          STAGING_KEY_PROPERTIES_B64: ${{ secrets.STAGING_KEY_PROPERTIES_B64 }}

      - name: Write key store
        shell: bash
        run: |
          mkdir android/keystore
          echo "$STAGING_KEYSTORE_B64" | base64 --decode > android/keystore/passemploi.jks
        env:
          STAGING_KEYSTORE_B64: ${{ secrets.STAGING_KEYSTORE_B64 }}

      - name: Write env
        shell: bash
        run: |
          echo "$STAGING_RUNTIME_ENV_B64" | base64 --decode > env/.env.staging
        env:
          STAGING_RUNTIME_ENV_B64: ${{ secrets.STAGING_RUNTIME_ENV_B64 }}

      - name: Build Android AAB test
        run: |
          flutter pub get
          flutter build appbundle \
          -t lib/cej_main.dart \
          --flavor cejStaging \
          --build-number=${{ needs.pre-build.outputs.date }} \
          -v

      - name: Scan directory
        if: always()
        run: |
          ls -R build/app/outputs/bundle

