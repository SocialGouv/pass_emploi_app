def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "fr.fabrique.social.gouv.passemploi"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'fr.fabrique.social.gouv.passemploi'
        ]
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            // In order to fix "[CLOUD_FIRESTORE] The service is currently unavailable" issue
            // https://github.com/firebase/flutterfire/discussions/5708#discussioncomment-925997
            shrinkResources false
            minifyEnabled false
        }
    }

    flavorDimensions "cej", "brsa"

    // cej
    productFlavors {
        staging {
            dimension "cej"
            versionNameSuffix "-staging"
            applicationId "fr.fabrique.social.gouv.passemploi.staging"
            resValue "string", "app_name", "CEJ Staging"
        }
        prod {
            dimension "cej"
            applicationId "fr.fabrique.social.gouv.passemploi"
            resValue "string", "app_name", "CEJ"
        }
    }
    
    // brsa
    productFlavors {
        staging {
            dimension "brsa"
            versionNameSuffix "-staging"
            applicationId "fr.fabrique.social.gouv.passemploi.rsa.staging"
            resValue "string", "app_name", "BRSA Staging"
        }
        prod {
            dimension "brsa"
            applicationId "fr.fabrique.social.gouv.passemploi.rsa"
            resValue "string", "app_name", "BRSA"
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
